<UserControl x:Class="SaritasaGen.FeatureGenerator.Views.AddFeatureControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding"
             mc:Ignorable="d"
             d:DesignHeight="210" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="BorderThickness" Value="1,1,1,0" />
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}">
                                    <ItemsControl ItemsSource="{Binding Path=(Validation.Errors)}" DisplayMemberPath="ErrorContent" />
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="validationTemplate">
                <Border BorderThickness="0,0,0,3" BorderBrush="Red" Opacity=".6">
                    <AdornedElementPlaceholder />
                </Border>
            </ControlTemplate>

            <Style x:Key="comboBoxInError" TargetType="{x:Type ComboBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">

        <Grid VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Visibility="{calc:Binding IsBusy}">
            <fa:ImageAwesome x:Name="Spinner" Icon="Spinner" Spin="True" Foreground="Gray" Width="48" Height="48" />
        </Grid>

        <Grid Visibility="{calc:Binding !IsBusy}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">Name:</TextBlock>
            <TextBox Grid.Row="0"
                 Grid.Column="1"
                 Name="FeatureNameTextBox"
                 Validation.ErrorTemplate="{StaticResource validationTemplate}"
                 Margin="10"
                 Padding="2"
                 Style="{StaticResource textBoxInError}"
                 Text="{Binding FeatureName, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
            </TextBox>

            <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center"
                        Orientation="Horizontal" HorizontalAlignment="Center">
                <RadioButton Margin="20 0 20 0" IsChecked="{calc:Binding IsQueryCreated}">Query</RadioButton>
                <RadioButton IsChecked="{calc:Binding !IsQueryCreated}">Command</RadioButton>
            </StackPanel>

            <CheckBox Grid.Row="2"
                      Grid.Column="0"
                      Name="IsBaseUsedCheckBox"
                      IsChecked="{Binding IsBaseClassUsed}"
                      VerticalAlignment="Center">
                Use base handler
            </CheckBox>
            <ComboBox Grid.Row="2"
                      Grid.Column="1"
                      Name="BaseClassComboBox"
                      IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True"
                      IsEnabled="{Binding ElementName=IsBaseUsedCheckBox, Path=IsChecked}"
                      Validation.ErrorTemplate="{StaticResource validationTemplate}"
                      Margin="10"
                      Text="{Binding BaseClassFileName, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                      ItemsSource="{Binding Classes}"
                      DisplayMemberPath="ClassName"
                      SelectedValuePath="ClassName"
                      Style="{StaticResource comboBoxInError}" />

            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="0,5,10,0">
                <CheckBox
                      Name="UseDtoCheckBox"
                      IsChecked="{Binding IsDtoUsed}"
                      VerticalAlignment="Center"
                      Margin="0 0 10 0">
                    Return DTO
                </CheckBox>
                <CheckBox
                      Name="UseListCheckBox"
                      IsChecked="{Binding IsListReturned}"
                      VerticalAlignment="Center">
                    Return List
                </CheckBox>
                <ComboBox
                      Name="ReturnDtoTextBox"
                      Width="176"
                      IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True"
                      IsEnabled="{Binding ElementName=UseDtoCheckBox, Path=IsChecked}"
                      Validation.ErrorTemplate="{StaticResource validationTemplate}"
                      Margin="10 0 0 0"
                      Text="{Binding DtoFileName, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                      ItemsSource="{Binding Dtos}"
                      DisplayMemberPath="ClassName"
                      SelectedValuePath="ClassName"
                      Style="{StaticResource comboBoxInError}" />
            </StackPanel>

            <StackPanel Grid.Row="4" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5,10,0">
                <Button Width="60"
                    Height="25"
                    Margin="0,0,15,0"
                    IsDefault="True"
                    Command="{Binding AddFeatureCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        Click="Button_Click"
                    Content ="Add">
                </Button>
                <Button Width="60"
                    Height="25"
                    IsCancel="True"
                    Command="{Binding CancelCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                    Content="Cancel" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
